  @[Link("System.SystemInformation")]
  lib LibSystemSystemInformation
    NTDDI_WIN2K = 83886080
NTDDI_WINXP = 83951616
NTDDI_WINXPSP2 = 83952128
NTDDI_WS03SP1 = 84017408
NTDDI_VISTA = 100663296
NTDDI_VISTASP1 = 100663552
NTDDI_WIN7 = 100728832
NTDDI_WIN8 = 100794368
NTDDI_WINBLUE = 100859904
NTDDI_WINTHRESHOLD = 167772160
SYSTEM_CPU_SET_INFORMATION_PARKED = 1
SYSTEM_CPU_SET_INFORMATION_ALLOCATED = 2
SYSTEM_CPU_SET_INFORMATION_ALLOCATED_TO_TARGET_PROCESS = 4
SYSTEM_CPU_SET_INFORMATION_REALTIME = 8
WIN32_WINNT_NT4 = 1024
WIN32_WINNT_WIN2K = 1280
WIN32_WINNT_WINXP = 1281
WIN32_WINNT_WS03 = 1282
WIN32_WINNT_WIN6 = 1536
WIN32_WINNT_VISTA = 1536
WIN32_WINNT_WS08 = 1536
WIN32_WINNT_LONGHORN = 1536
WIN32_WINNT_WIN7 = 1537
WIN32_WINNT_WIN8 = 1538
WIN32_WINNT_WINBLUE = 1539
WIN32_WINNT_WINTHRESHOLD = 2560
WIN32_WINNT_WIN10 = 2560
WIN32_IE_IE20 = 512
WIN32_IE_IE30 = 768
WIN32_IE_IE302 = 770
WIN32_IE_IE40 = 1024
WIN32_IE_IE401 = 1025
WIN32_IE_IE50 = 1280
WIN32_IE_IE501 = 1281
WIN32_IE_IE55 = 1360
WIN32_IE_IE60 = 1536
WIN32_IE_IE60SP1 = 1537
WIN32_IE_IE60SP2 = 1539
WIN32_IE_IE70 = 1792
WIN32_IE_IE80 = 2048
WIN32_IE_IE90 = 2304
WIN32_IE_IE100 = 2560
WIN32_IE_IE110 = 2560
WIN32_IE_NT4 = 512
WIN32_IE_NT4SP1 = 512
WIN32_IE_NT4SP2 = 512
WIN32_IE_NT4SP3 = 770
WIN32_IE_NT4SP4 = 1025
WIN32_IE_NT4SP5 = 1025
WIN32_IE_NT4SP6 = 1280
WIN32_IE_WIN98 = 1025
WIN32_IE_WIN98SE = 1280
WIN32_IE_WINME = 1360
WIN32_IE_WIN2K = 1281
WIN32_IE_WIN2KSP1 = 1281
WIN32_IE_WIN2KSP2 = 1281
WIN32_IE_WIN2KSP3 = 1281
WIN32_IE_WIN2KSP4 = 1281
WIN32_IE_XP = 1536
WIN32_IE_XPSP1 = 1537
WIN32_IE_XPSP2 = 1539
WIN32_IE_WS03 = 1538
WIN32_IE_WS03SP1 = 1539
WIN32_IE_WIN6 = 1792
WIN32_IE_LONGHORN = 1792
WIN32_IE_WIN7 = 2048
WIN32_IE_WIN8 = 2560
WIN32_IE_WINBLUE = 2560
WIN32_IE_WINTHRESHOLD = 2560
WIN32_IE_WIN10 = 2560
NTDDI_WIN4 = 67108864
NTDDI_WIN2KSP1 = 83886336
NTDDI_WIN2KSP2 = 83886592
NTDDI_WIN2KSP3 = 83886848
NTDDI_WIN2KSP4 = 83887104
NTDDI_WINXPSP1 = 83951872
NTDDI_WINXPSP3 = 83952384
NTDDI_WINXPSP4 = 83952640
NTDDI_WS03 = 84017152
NTDDI_WS03SP2 = 84017664
NTDDI_WS03SP3 = 84017920
NTDDI_WS03SP4 = 84018176
NTDDI_WIN6 = 100663296
NTDDI_WIN6SP1 = 100663552
NTDDI_WIN6SP2 = 100663808
NTDDI_WIN6SP3 = 100664064
NTDDI_WIN6SP4 = 100664320
NTDDI_VISTASP2 = 100663808
NTDDI_VISTASP3 = 100664064
NTDDI_VISTASP4 = 100664320
NTDDI_LONGHORN = 100663296
NTDDI_WS08 = 100663552
NTDDI_WS08SP2 = 100663808
NTDDI_WS08SP3 = 100664064
NTDDI_WS08SP4 = 100664320
NTDDI_WIN10 = 167772160
NTDDI_WIN10_TH2 = 167772161
NTDDI_WIN10_RS1 = 167772162
NTDDI_WIN10_RS2 = 167772163
NTDDI_WIN10_RS3 = 167772164
NTDDI_WIN10_RS4 = 167772165
NTDDI_WIN10_RS5 = 167772166
NTDDI_WIN10_19H1 = 167772167
NTDDI_WIN10_VB = 167772168
NTDDI_WIN10_MN = 167772169
NTDDI_WIN10_FE = 167772170
NTDDI_WIN10_CO = 167772171
WDK_NTDDI_VERSION = 167772171
OSVERSION_MASK = 4294901760
SPVERSION_MASK = 65280
SUBVERSION_MASK = 255
NTDDI_VERSION = 167772171
SCEX2_ALT_NETBIOS_NAME = 1
enum VER_FLAGS : UInt32
VER_MINORVERSION = 1

VER_MAJORVERSION = 2

VER_BUILDNUMBER = 4

VER_PLATFORMID = 8

VER_SERVICEPACKMINOR = 16

VER_SERVICEPACKMAJOR = 32

VER_SUITENAME = 64

VER_PRODUCT_TYPE = 128

end
enum FIRMWARE_TABLE_PROVIDER : UInt32
ACPI = 1094930505

FIRM = 1179210317

RSMB = 1381190978

end
enum USER_CET_ENVIRONMENT : UInt32
USER_CET_ENVIRONMENT_WIN32_PROCESS = 0

USER_CET_ENVIRONMENT_SGX2_ENCLAVE = 2

USER_CET_ENVIRONMENT_VBS_ENCLAVE = 16

USER_CET_ENVIRONMENT_VBS_BASIC_ENCLAVE = 17

end
enum OS_PRODUCT_TYPE : UInt32
PRODUCT_BUSINESS = 6

PRODUCT_BUSINESS_N = 16

PRODUCT_CLUSTER_SERVER = 18

PRODUCT_CLUSTER_SERVER_V = 64

PRODUCT_CORE = 101

PRODUCT_CORE_COUNTRYSPECIFIC = 99

PRODUCT_CORE_N = 98

PRODUCT_CORE_SINGLELANGUAGE = 100

PRODUCT_DATACENTER_EVALUATION_SERVER = 80

PRODUCT_DATACENTER_A_SERVER_CORE = 145

PRODUCT_STANDARD_A_SERVER_CORE = 146

PRODUCT_DATACENTER_SERVER = 8

PRODUCT_DATACENTER_SERVER_CORE = 12

PRODUCT_DATACENTER_SERVER_CORE_V = 39

PRODUCT_DATACENTER_SERVER_V = 37

PRODUCT_EDUCATION = 121

PRODUCT_EDUCATION_N = 122

PRODUCT_ENTERPRISE = 4

PRODUCT_ENTERPRISE_E = 70

PRODUCT_ENTERPRISE_EVALUATION = 72

PRODUCT_ENTERPRISE_N = 27

PRODUCT_ENTERPRISE_N_EVALUATION = 84

PRODUCT_ENTERPRISE_S = 125

PRODUCT_ENTERPRISE_S_EVALUATION = 129

PRODUCT_ENTERPRISE_S_N = 126

PRODUCT_ENTERPRISE_S_N_EVALUATION = 130

PRODUCT_ENTERPRISE_SERVER = 10

PRODUCT_ENTERPRISE_SERVER_CORE = 14

PRODUCT_ENTERPRISE_SERVER_CORE_V = 41

PRODUCT_ENTERPRISE_SERVER_IA64 = 15

PRODUCT_ENTERPRISE_SERVER_V = 38

PRODUCT_ESSENTIALBUSINESS_SERVER_ADDL = 60

PRODUCT_ESSENTIALBUSINESS_SERVER_ADDLSVC = 62

PRODUCT_ESSENTIALBUSINESS_SERVER_MGMT = 59

PRODUCT_ESSENTIALBUSINESS_SERVER_MGMTSVC = 61

PRODUCT_HOME_BASIC = 2

PRODUCT_HOME_BASIC_E = 67

PRODUCT_HOME_BASIC_N = 5

PRODUCT_HOME_PREMIUM = 3

PRODUCT_HOME_PREMIUM_E = 68

PRODUCT_HOME_PREMIUM_N = 26

PRODUCT_HOME_PREMIUM_SERVER = 34

PRODUCT_HOME_SERVER = 19

PRODUCT_HYPERV = 42

PRODUCT_IOTUAP = 123

PRODUCT_IOTUAPCOMMERCIAL = 131

PRODUCT_MEDIUMBUSINESS_SERVER_MANAGEMENT = 30

PRODUCT_MEDIUMBUSINESS_SERVER_MESSAGING = 32

PRODUCT_MEDIUMBUSINESS_SERVER_SECURITY = 31

PRODUCT_MOBILE_CORE = 104

PRODUCT_MOBILE_ENTERPRISE = 133

PRODUCT_MULTIPOINT_PREMIUM_SERVER = 77

PRODUCT_MULTIPOINT_STANDARD_SERVER = 76

PRODUCT_PRO_WORKSTATION = 161

PRODUCT_PRO_WORKSTATION_N = 162

PRODUCT_PROFESSIONAL = 48

PRODUCT_PROFESSIONAL_E = 69

PRODUCT_PROFESSIONAL_N = 49

PRODUCT_PROFESSIONAL_WMC = 103

PRODUCT_SB_SOLUTION_SERVER = 50

PRODUCT_SB_SOLUTION_SERVER_EM = 54

PRODUCT_SERVER_FOR_SB_SOLUTIONS = 51

PRODUCT_SERVER_FOR_SB_SOLUTIONS_EM = 55

PRODUCT_SERVER_FOR_SMALLBUSINESS = 24

PRODUCT_SERVER_FOR_SMALLBUSINESS_V = 35

PRODUCT_SERVER_FOUNDATION = 33

PRODUCT_SMALLBUSINESS_SERVER = 9

PRODUCT_SMALLBUSINESS_SERVER_PREMIUM = 25

PRODUCT_SMALLBUSINESS_SERVER_PREMIUM_CORE = 63

PRODUCT_SOLUTION_EMBEDDEDSERVER = 56

PRODUCT_STANDARD_EVALUATION_SERVER = 79

PRODUCT_STANDARD_SERVER = 7

PRODUCT_STANDARD_SERVER_CORE_ = 13

PRODUCT_STANDARD_SERVER_CORE_V = 40

PRODUCT_STANDARD_SERVER_V = 36

PRODUCT_STANDARD_SERVER_SOLUTIONS = 52

PRODUCT_STANDARD_SERVER_SOLUTIONS_CORE = 53

PRODUCT_STARTER = 11

PRODUCT_STARTER_E = 66

PRODUCT_STARTER_N = 47

PRODUCT_STORAGE_ENTERPRISE_SERVER = 23

PRODUCT_STORAGE_ENTERPRISE_SERVER_CORE = 46

PRODUCT_STORAGE_EXPRESS_SERVER = 20

PRODUCT_STORAGE_EXPRESS_SERVER_CORE = 43

PRODUCT_STORAGE_STANDARD_EVALUATION_SERVER = 96

PRODUCT_STORAGE_STANDARD_SERVER = 21

PRODUCT_STORAGE_STANDARD_SERVER_CORE = 44

PRODUCT_STORAGE_WORKGROUP_EVALUATION_SERVER = 95

PRODUCT_STORAGE_WORKGROUP_SERVER = 22

PRODUCT_STORAGE_WORKGROUP_SERVER_CORE = 45

PRODUCT_ULTIMATE = 1

PRODUCT_ULTIMATE_E = 71

PRODUCT_ULTIMATE_N = 28

PRODUCT_UNDEFINED = 0

PRODUCT_WEB_SERVER = 17

PRODUCT_WEB_SERVER_CORE = 29

end
enum DEVICEFAMILYINFOENUM : UInt32
DEVICEFAMILYINFOENUM_UAP = 0

DEVICEFAMILYINFOENUM_WINDOWS_8X = 1

DEVICEFAMILYINFOENUM_WINDOWS_PHONE_8X = 2

DEVICEFAMILYINFOENUM_DESKTOP = 3

DEVICEFAMILYINFOENUM_MOBILE = 4

DEVICEFAMILYINFOENUM_XBOX = 5

DEVICEFAMILYINFOENUM_TEAM = 6

DEVICEFAMILYINFOENUM_IOT = 7

DEVICEFAMILYINFOENUM_IOT_HEADLESS = 8

DEVICEFAMILYINFOENUM_SERVER = 9

DEVICEFAMILYINFOENUM_HOLOGRAPHIC = 10

DEVICEFAMILYINFOENUM_XBOXSRA = 11

DEVICEFAMILYINFOENUM_XBOXERA = 12

DEVICEFAMILYINFOENUM_SERVER_NANO = 13

DEVICEFAMILYINFOENUM_8828080 = 14

DEVICEFAMILYINFOENUM_7067329 = 15

DEVICEFAMILYINFOENUM_WINDOWS_CORE = 16

DEVICEFAMILYINFOENUM_WINDOWS_CORE_HEADLESS = 17

DEVICEFAMILYINFOENUM_MAX = 17

end
enum DEVICEFAMILYDEVICEFORM : UInt32
DEVICEFAMILYDEVICEFORM_UNKNOWN = 0

DEVICEFAMILYDEVICEFORM_PHONE = 1

DEVICEFAMILYDEVICEFORM_TABLET = 2

DEVICEFAMILYDEVICEFORM_DESKTOP = 3

DEVICEFAMILYDEVICEFORM_NOTEBOOK = 4

DEVICEFAMILYDEVICEFORM_CONVERTIBLE = 5

DEVICEFAMILYDEVICEFORM_DETACHABLE = 6

DEVICEFAMILYDEVICEFORM_ALLINONE = 7

DEVICEFAMILYDEVICEFORM_STICKPC = 8

DEVICEFAMILYDEVICEFORM_PUCK = 9

DEVICEFAMILYDEVICEFORM_LARGESCREEN = 10

DEVICEFAMILYDEVICEFORM_HMD = 11

DEVICEFAMILYDEVICEFORM_INDUSTRY_HANDHELD = 12

DEVICEFAMILYDEVICEFORM_INDUSTRY_TABLET = 13

DEVICEFAMILYDEVICEFORM_BANKING = 14

DEVICEFAMILYDEVICEFORM_BUILDING_AUTOMATION = 15

DEVICEFAMILYDEVICEFORM_DIGITAL_SIGNAGE = 16

DEVICEFAMILYDEVICEFORM_GAMING = 17

DEVICEFAMILYDEVICEFORM_HOME_AUTOMATION = 18

DEVICEFAMILYDEVICEFORM_INDUSTRIAL_AUTOMATION = 19

DEVICEFAMILYDEVICEFORM_KIOSK = 20

DEVICEFAMILYDEVICEFORM_MAKER_BOARD = 21

DEVICEFAMILYDEVICEFORM_MEDICAL = 22

DEVICEFAMILYDEVICEFORM_NETWORKING = 23

DEVICEFAMILYDEVICEFORM_POINT_OF_SERVICE = 24

DEVICEFAMILYDEVICEFORM_PRINTING = 25

DEVICEFAMILYDEVICEFORM_THIN_CLIENT = 26

DEVICEFAMILYDEVICEFORM_TOY = 27

DEVICEFAMILYDEVICEFORM_VENDING = 28

DEVICEFAMILYDEVICEFORM_INDUSTRY_OTHER = 29

DEVICEFAMILYDEVICEFORM_XBOX_ONE = 30

DEVICEFAMILYDEVICEFORM_XBOX_ONE_S = 31

DEVICEFAMILYDEVICEFORM_XBOX_ONE_X = 32

DEVICEFAMILYDEVICEFORM_XBOX_ONE_X_DEVKIT = 33

DEVICEFAMILYDEVICEFORM_XBOX_SERIES_X = 34

DEVICEFAMILYDEVICEFORM_XBOX_SERIES_X_DEVKIT = 35

DEVICEFAMILYDEVICEFORM_XBOX_RESERVED_00 = 36

DEVICEFAMILYDEVICEFORM_XBOX_RESERVED_01 = 37

DEVICEFAMILYDEVICEFORM_XBOX_RESERVED_02 = 38

DEVICEFAMILYDEVICEFORM_XBOX_RESERVED_03 = 39

DEVICEFAMILYDEVICEFORM_XBOX_RESERVED_04 = 40

DEVICEFAMILYDEVICEFORM_XBOX_RESERVED_05 = 41

DEVICEFAMILYDEVICEFORM_XBOX_RESERVED_06 = 42

DEVICEFAMILYDEVICEFORM_XBOX_RESERVED_07 = 43

DEVICEFAMILYDEVICEFORM_XBOX_RESERVED_08 = 44

DEVICEFAMILYDEVICEFORM_XBOX_RESERVED_09 = 45

DEVICEFAMILYDEVICEFORM_MAX = 45

end
type FIRMWARE_TABLE_ID = LibC::UInt32
struct GROUP_AFFINITY
  mask : LibC::UIint*
  group : LibC::UInt16
  reserved : Array(LibC::UInt16)
end
struct Pig10152075f192
  wProcessorArchitecture : PROCESSOR_ARCHITECTURE
  wReserved : LibC::UInt16
end
type Pigc69f398438b3 = LibC::UInt32 | Pig10152075f192
struct SYSTEM_INFO
  dwPageSize : LibC::UInt32
  lpMinimumApplicationAddress : LibC::Void*
  lpMaximumApplicationAddress : LibC::Void*
  dwActiveProcessorMask : LibC::UIint*
  dwNumberOfProcessors : LibC::UInt32
  dwProcessorType : LibC::UInt32
  dwAllocationGranularity : LibC::UInt32
  wProcessorLevel : LibC::UInt16
  wProcessorRevision : LibC::UInt16
end
struct MEMORYSTATUSEX
  dwLength : LibC::UInt32
  dwMemoryLoad : LibC::UInt32
  ullTotalPhys : LibC::UInt64
  ullAvailPhys : LibC::UInt64
  ullTotalPageFile : LibC::UInt64
  ullAvailPageFile : LibC::UInt64
  ullTotalVirtual : LibC::UInt64
  ullAvailVirtual : LibC::UInt64
  ullAvailExtendedVirtual : LibC::UInt64
end
enum COMPUTER_NAME_FORMAT : Int32
ComputerNameNetBIOS = 0

ComputerNameDnsHostname = 1

ComputerNameDnsDomain = 2

ComputerNameDnsFullyQualified = 3

ComputerNamePhysicalNetBIOS = 4

ComputerNamePhysicalDnsHostname = 5

ComputerNamePhysicalDnsDomain = 6

ComputerNamePhysicalDnsFullyQualified = 7

ComputerNameMax = 8

end
enum FIRMWARE_TYPE : Int32
FirmwareTypeUnknown = 0

FirmwareTypeBios = 1

FirmwareTypeUefi = 2

FirmwareTypeMax = 3

end
enum LOGICAL_PROCESSOR_RELATIONSHIP : Int32
RelationProcessorCore = 0

RelationNumaNode = 1

RelationCache = 2

RelationProcessorPackage = 3

RelationGroup = 4

RelationProcessorDie = 5

RelationNumaNodeEx = 6

RelationProcessorModule = 7

RelationAll = 65535

end
enum PROCESSOR_CACHE_TYPE : Int32
CacheUnified = 0

CacheInstruction = 1

CacheData = 2

CacheTrace = 3

end
struct CACHE_DESCRIPTOR
  level : LibC::Byte
  associativity : LibC::Byte
  lineSize : LibC::UInt16
  size : LibC::UInt32
  type : PROCESSOR_CACHE_TYPE
end
struct Piga71e6593aaa7
  flags : LibC::Byte
end
struct Other423c35da13f8
  nodeNumber : LibC::UInt32
end
type Rabbit344adbd6eb8b = Piga71e6593aaa7 | Other423c35da13f8 | CACHE_DESCRIPTOR | Array(LibC::UInt64)
struct SYSTEM_LOGICAL_PROCESSOR_INFORMATION
  processorMask : LibC::UIint*
  relationship : LOGICAL_PROCESSOR_RELATIONSHIP
end
struct PROCESSOR_RELATIONSHIP
  flags : LibC::Byte
  efficiencyClass : LibC::Byte
  reserved : Array(LibC::Byte)
  groupCount : LibC::UInt16
  groupMask : Array(GROUP_AFFINITY)
end
type Pige06e3950eca0 = GROUP_AFFINITY | Array(GROUP_AFFINITY)
struct NUMA_NODE_RELATIONSHIP
  nodeNumber : LibC::UInt32
  reserved : Array(LibC::Byte)
  groupCount : LibC::UInt16
end
type Rabbit0406acfe5aee = GROUP_AFFINITY | Array(GROUP_AFFINITY)
struct CACHE_RELATIONSHIP
  level : LibC::Byte
  associativity : LibC::Byte
  lineSize : LibC::UInt16
  cacheSize : LibC::UInt32
  type : PROCESSOR_CACHE_TYPE
  reserved : Array(LibC::Byte)
  groupCount : LibC::UInt16
end
struct PROCESSOR_GROUP_INFO
  maximumProcessorCount : LibC::Byte
  activeProcessorCount : LibC::Byte
  reserved : Array(LibC::Byte)
  activeProcessorMask : LibC::UIint*
end
struct GROUP_RELATIONSHIP
  maximumGroupCount : LibC::UInt16
  activeGroupCount : LibC::UInt16
  reserved : Array(LibC::Byte)
  groupInfo : Array(PROCESSOR_GROUP_INFO)
end
type Duck0e779ea14746 = PROCESSOR_RELATIONSHIP | NUMA_NODE_RELATIONSHIP | CACHE_RELATIONSHIP | GROUP_RELATIONSHIP
struct SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX
  relationship : LOGICAL_PROCESSOR_RELATIONSHIP
  size : LibC::UInt32
end
enum CPU_SET_INFORMATION_TYPE : Int32
CpuSetInformation = 0

end
struct Pig721be688edf7
  bitfield : LibC::Byte
end
type Pigaed5fe74d173 = LibC::Byte | Pig721be688edf7
type Owlce3278645c8d = LibC::UInt32 | LibC::Byte
struct Duck8efdd2954bbe
  id : LibC::UInt32
  group : LibC::UInt16
  logicalProcessorIndex : LibC::Byte
  coreIndex : LibC::Byte
  lastLevelCacheIndex : LibC::Byte
  numaNodeIndex : LibC::Byte
  efficiencyClass : LibC::Byte
  anonymous1 : Pigaed5fe74d173
  anonymous2 : Owlce3278645c8d
  allocationTag : LibC::UInt64
end
type Rabbit4274bc404ff6 = Duck8efdd2954bbe
struct SYSTEM_CPU_SET_INFORMATION
  size : LibC::UInt32
  type : CPU_SET_INFORMATION_TYPE
end
struct SYSTEM_POOL_ZEROING_INFORMATION
  poolZeroingSupportPresent : BOOLEAN
end
struct SYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION
  cycleTime : LibC::UInt64
end
struct SYSTEM_SUPPORTED_PROCESSOR_ARCHITECTURES_INFORMATION
  bitfield : LibC::UInt32
end
struct OSVERSIONINFOA
  dwOSVersionInfoSize : LibC::UInt32
  dwMajorVersion : LibC::UInt32
  dwMinorVersion : LibC::UInt32
  dwBuildNumber : LibC::UInt32
  dwPlatformId : LibC::UInt32
  szCSDVersion : Array(CHAR)
end
struct OSVERSIONINFOW
  dwOSVersionInfoSize : LibC::UInt32
  dwMajorVersion : LibC::UInt32
  dwMinorVersion : LibC::UInt32
  dwBuildNumber : LibC::UInt32
  dwPlatformId : LibC::UInt32
  szCSDVersion : Array(LibC::Char)
end
struct OSVERSIONINFOEXA
  dwOSVersionInfoSize : LibC::UInt32
  dwMajorVersion : LibC::UInt32
  dwMinorVersion : LibC::UInt32
  dwBuildNumber : LibC::UInt32
  dwPlatformId : LibC::UInt32
  szCSDVersion : Array(CHAR)
  wServicePackMajor : LibC::UInt16
  wServicePackMinor : LibC::UInt16
  wSuiteMask : LibC::UInt16
  wProductType : LibC::Byte
  wReserved : LibC::Byte
end
struct OSVERSIONINFOEXW
  dwOSVersionInfoSize : LibC::UInt32
  dwMajorVersion : LibC::UInt32
  dwMinorVersion : LibC::UInt32
  dwBuildNumber : LibC::UInt32
  dwPlatformId : LibC::UInt32
  szCSDVersion : Array(LibC::Char)
  wServicePackMajor : LibC::UInt16
  wServicePackMinor : LibC::UInt16
  wSuiteMask : LibC::UInt16
  wProductType : LibC::Byte
  wReserved : LibC::Byte
end
enum OS_DEPLOYEMENT_STATE_VALUES : Int32
OS_DEPLOYMENT_STANDARD = 1

OS_DEPLOYMENT_COMPACT = 2

end
enum RTL_SYSTEM_GLOBAL_DATA_ID : Int32
GlobalDataIdUnknown = 0

GlobalDataIdRngSeedVersion = 1

GlobalDataIdInterruptTime = 2

GlobalDataIdTimeZoneBias = 3

GlobalDataIdImageNumberLow = 4

GlobalDataIdImageNumberHigh = 5

GlobalDataIdTimeZoneId = 6

GlobalDataIdNtMajorVersion = 7

GlobalDataIdNtMinorVersion = 8

GlobalDataIdSystemExpirationDate = 9

GlobalDataIdKdDebuggerEnabled = 10

GlobalDataIdCyclesPerYield = 11

GlobalDataIdSafeBootMode = 12

GlobalDataIdLastSystemRITEventTickCount = 13

end
struct MEMORYSTATUS
  dwLength : LibC::UInt32
  dwMemoryLoad : LibC::UInt32
  dwTotalPhys : LibC::UIint*
  dwAvailPhys : LibC::UIint*
  dwTotalPageFile : LibC::UIint*
  dwAvailPageFile : LibC::UIint*
  dwTotalVirtual : LibC::UIint*
  dwAvailVirtual : LibC::UIint*
end
enum DEP_SYSTEM_POLICY_TYPE : Int32
DEPPolicyAlwaysOff = 0

DEPPolicyAlwaysOn = 1

DEPPolicyOptIn = 2

DEPPolicyOptOut = 3

DEPTotalPolicyCount = 4

end
fun globalMemoryStatusEx(lpBuffer : MEMORYSTATUSEX*) : BOOL
fun getSystemInfo(lpSystemInfo : SYSTEM_INFO*) : LibC::Void
fun getSystemTime(lpSystemTime : SYSTEMTIME*) : LibC::Void
fun getSystemTimeAsFileTime(lpSystemTimeAsFileTime : FILETIME*) : LibC::Void
fun getLocalTime(lpSystemTime : SYSTEMTIME*) : LibC::Void
fun isUserCetAvailableInEnvironment(userCetEnvironment : USER_CET_ENVIRONMENT) : BOOL
fun getSystemLeapSecondInformation(enabled : BOOL*, flags : LibC::UInt32*) : BOOL
fun getVersion() : LibC::UInt32
fun setLocalTime(lpSystemTime : SYSTEMTIME*) : BOOL
fun getTickCount() : LibC::UInt32
fun getTickCount64() : LibC::UInt64
fun getSystemTimeAdjustment(lpTimeAdjustment : LibC::UInt32*, lpTimeIncrement : LibC::UInt32*, lpTimeAdjustmentDisabled : BOOL*) : BOOL
fun getSystemTimeAdjustmentPrecise(lpTimeAdjustment : LibC::UInt64*, lpTimeIncrement : LibC::UInt64*, lpTimeAdjustmentDisabled : BOOL*) : BOOL
fun setComputerNameExW(nameType : COMPUTER_NAME_FORMAT, lpBuffer : PWSTR) : BOOL
fun setSystemTime(lpSystemTime : SYSTEMTIME*) : BOOL
fun getVersionExA(lpVersionInformation : OSVERSIONINFOA*) : BOOL
fun getVersionExW(lpVersionInformation : OSVERSIONINFOW*) : BOOL
fun getLogicalProcessorInformation(buffer : SYSTEM_LOGICAL_PROCESSOR_INFORMATION*, returnedLength : LibC::UInt32*) : BOOL
fun getLogicalProcessorInformationEx(relationshipType : LOGICAL_PROCESSOR_RELATIONSHIP, buffer : SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX*, returnedLength : LibC::UInt32*) : BOOL
fun getNativeSystemInfo(lpSystemInfo : SYSTEM_INFO*) : LibC::Void
fun getSystemTimePreciseAsFileTime(lpSystemTimeAsFileTime : FILETIME*) : LibC::Void
fun getProductInfo(dwOSMajorVersion : LibC::UInt32, dwOSMinorVersion : LibC::UInt32, dwSpMajorVersion : LibC::UInt32, dwSpMinorVersion : LibC::UInt32, pdwReturnedProductType : OS_PRODUCT_TYPE*) : BOOL
fun verSetConditionMask(conditionMask : LibC::UInt64, typeMask : VER_FLAGS, condition : LibC::Byte) : LibC::UInt64
fun getOsSafeBootMode(flags : LibC::UInt32*) : BOOL
fun enumSystemFirmwareTables(firmwareTableProviderSignature : FIRMWARE_TABLE_PROVIDER, pFirmwareTableEnumBuffer : FIRMWARE_TABLE_ID*, bufferSize : LibC::UInt32) : LibC::UInt32
fun getSystemFirmwareTable(firmwareTableProviderSignature : FIRMWARE_TABLE_PROVIDER, firmwareTableID : FIRMWARE_TABLE_ID, pFirmwareTableBuffer : LibC::Void*, bufferSize : LibC::UInt32) : LibC::UInt32
fun getPhysicallyInstalledSystemMemory(totalMemoryInKilobytes : LibC::UInt64*) : BOOL
fun setComputerNameEx2W(nameType : COMPUTER_NAME_FORMAT, flags : LibC::UInt32, lpBuffer : PWSTR) : BOOL
fun setSystemTimeAdjustment(dwTimeAdjustment : LibC::UInt32, bTimeAdjustmentDisabled : BOOL) : BOOL
fun setSystemTimeAdjustmentPrecise(dwTimeAdjustment : LibC::UInt64, bTimeAdjustmentDisabled : BOOL) : BOOL
fun getProcessorSystemCycleTime(group : LibC::UInt16, buffer : SYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION*, returnedLength : LibC::UInt32*) : BOOL
fun getOsManufacturingMode(pbEnabled : BOOL*) : BOOL
fun getIntegratedDisplaySize(sizeInInches : LibC::Double*) : HRESULT
fun setComputerNameA(lpComputerName : PSTR) : BOOL
fun setComputerNameW(lpComputerName : PWSTR) : BOOL
fun setComputerNameExA(nameType : COMPUTER_NAME_FORMAT, lpBuffer : PSTR) : BOOL
fun getSystemCpuSetInformation(information : SYSTEM_CPU_SET_INFORMATION*, bufferLength : LibC::UInt32, returnedLength : LibC::UInt32*, process : HANDLE, flags : LibC::UInt32) : BOOL
fun isWow64GuestMachineSupported(wowGuestMachine : LibC::UInt16, machineIsSupported : BOOL*) : HRESULT
fun rtlGetProductInfo(oSMajorVersion : LibC::UInt32, oSMinorVersion : LibC::UInt32, spMajorVersion : LibC::UInt32, spMinorVersion : LibC::UInt32, returnedProductType : LibC::UInt32*) : BOOLEAN
fun rtlOsDeploymentState(flags : LibC::UInt32) : OS_DEPLOYEMENT_STATE_VALUES
fun rtlGetSystemGlobalData(dataId : RTL_SYSTEM_GLOBAL_DATA_ID, buffer : LibC::Void*, size : LibC::UInt32) : LibC::UInt32
fun rtlGetDeviceFamilyInfoEnum(pullUAPInfo : LibC::UInt64*, pulDeviceFamily : DEVICEFAMILYINFOENUM*, pulDeviceForm : DEVICEFAMILYDEVICEFORM*) : LibC::Void
fun rtlConvertDeviceFamilyInfoToString(pulDeviceFamilyBufferSize : LibC::UInt32*, pulDeviceFormBufferSize : LibC::UInt32*, deviceFamily : PWSTR, deviceForm : PWSTR) : LibC::UInt32
fun rtlSwitchedVVI(versionInfo : OSVERSIONINFOEXW*, typeMask : LibC::UInt32, conditionMask : LibC::UInt64) : LibC::UInt32
fun globalMemoryStatus(lpBuffer : MEMORYSTATUS*) : LibC::Void
fun getSystemDEPPolicy() : DEP_SYSTEM_POLICY_TYPE
fun getFirmwareType(firmwareType : FIRMWARE_TYPE*) : BOOL
fun verifyVersionInfoA(lpVersionInformation : OSVERSIONINFOEXA*, dwTypeMask : VER_FLAGS, dwlConditionMask : LibC::UInt64) : BOOL
fun verifyVersionInfoW(lpVersionInformation : OSVERSIONINFOEXW*, dwTypeMask : VER_FLAGS, dwlConditionMask : LibC::UInt64) : BOOL

  end
